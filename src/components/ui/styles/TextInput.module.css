:root {
    --radius: var(--bs-border-radius);
    --label-scale: 0.85;
}

.field {
    position: relative;
    margin: 0.3rem 0;
}

/* Wrapper */
.inputWrapper {
    position: relative;
}

/* Base input */
.input {
    width: 100%;
    padding: 1.125rem 0.875rem 0.875rem;
    border: 1px solid var(--neutral-400);
    border-radius: var(--radius);
    background: var(--color-bg-surface);
    color: var(--color-text-body);
    font: inherit;
    outline: none;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.input::placeholder {
    color: transparent;
}

.input:hover {
    border-color: var(--color-primary-hover);
}

.field:has(.input:focus) .input {
    border-color: var(--color-outline);
    border: 2px solid var(--color-outline);
}

/* Floating label */
.label {
    position: absolute;
    left: 0.65rem;
    top: 0;
    transform: translateY(1.05rem);
    padding: 0 0.35rem;
    color: var(--color-text-muted);
    pointer-events: none;
    background: var(--color-bg-surface);
    transform-origin: left center;
    transition: transform 0.18s ease, color 0.18s ease, background 0.18s ease;
    z-index: 1;
    line-height: 1.1;
    border-radius: 6px;
}

.field:has(.input:focus) .label,
.input:not(:placeholder-shown)+.label {
    transform: translateY(-50%) scale(var(--label-scale));
    color: var(--color-primary);
}

.help {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    margin-top: 0.35rem;
}

/* === THEME VARIANTS === */
.primary {
    --border: var(--color-primary);
    --border-focus: var(--color-primary);
    --border-focus-rgb: var(--bs-primary-rgb);
    --label-focus-color: var(--color-primary);
}

.primaryLight {
    --border: var(--color-primary-light);
    --border-focus: var(--color-primary-light);
    --border-focus-rgb: var(--bs-primary-rgb);
    --label-focus-color: var(--color-primary-light);
}

.light {
    --border: var(--neutral-200);
    --border-focus: var(--neutral-300);
    --border-focus-rgb: var(--bs-light-rgb);
    --label-focus-color: var(--neutral-500);
}

.light2 {
    --border: var(--neutral-300);
    --border-focus: var(--neutral-400);
    --border-focus-rgb: var(--bs-light-rgb);
    --label-focus-color: var(--neutral-600);
}

.secondary {
    --border: var(--color-secondary);
    --border-focus: var(--color-secondary-dark);
    --border-focus-rgb: var(--bs-secondary-rgb);
    --label-focus-color: var(--color-secondary);
}

/* === STATUS VARIANTS === */
.success {
    --border: var(--color-success);
    --border-focus: var(--color-success);
    --border-focus-rgb: var(--bs-success-rgb);
    --label-focus-color: var(--color-success);
    --muted: var(--color-success);
}

.info {
    --border: var(--color-info);
    --border-focus: var(--color-info);
    --border-focus-rgb: var(--bs-info-rgb);
    --label-focus-color: var(--color-info);
    --muted: var(--color-info);
}

.warning {
    --border: var(--color-warning);
    --border-focus: var(--color-warning);
    --border-focus-rgb: var(--bs-warning-rgb);
    --label-focus-color: var(--color-warning);
    --muted: var(--color-warning);
}

/* === ICONS === */
.icon {
    position: absolute;
    top: 50%;
    right: 0.75rem;
    transform: translateY(-50%);
    font-size: 1.2rem;
    color: var(--color-text-muted);
    z-index: 2;
}

/* Icon color change on input focus */
.field:has(.input:focus) .icon {
    color: var(--label-focus-color, var(--color-primary));
}

.toggle {
    cursor: pointer;
}

/* Extra padding for right icon */
.iconRight .input {
    padding-right: 2.25rem;
}

/* === SIZES === */
.xs .input {
    padding: 0.375rem 0.5rem;
    font-size: 0.625rem;
}

.sm .input {
    padding: 0.5rem 0.625rem;
    font-size: 0.75rem;
}

.md .input {
    padding: 0.675rem 0.75rem;
    font-size: 1.1rem;
}

.lg .input {
    padding: 0.875rem 1rem;
    font-size: 1.2rem;
}

.xl .input {
    padding: 1rem 1.125rem;
    font-size: 1.3rem;
}

/* Label transform per size */
.xs .label {
    transform: translateY(0.6rem);
}

.sm .label {
    transform: translateY(0.75rem);
}

.md .label {
    transform: translateY(1.05rem);
}

.lg .label {
    transform: translateY(1.125rem);
}

.xl .label {
    transform: translateY(1.5rem);
}

/* Icon position per size */
.xs .icon,
.sm .icon,
.md .icon,
.lg .icon,
.xl .icon {
    top: 50%;
}